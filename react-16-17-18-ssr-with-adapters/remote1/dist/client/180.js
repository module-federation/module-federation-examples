"use strict";(self.webpackChunk_react_ssr_remote1=self.webpackChunk_react_ssr_remote1||[]).push([[180],{180:(e,t,r)=>{r.r(t),r.d(t,{Adapted:()=>l,default:()=>s});var n=r(811),a=r.n(n),d=r(513);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o.apply(this,arguments)}const c=e=>a().createElement("div",{style:{padding:"1rem",borderRadius:"0.25rem",border:"4px dashed #228b22"}},a().createElement("h2",null,"Remote 1: Content (React v16.6.3)"),a().createElement("p",null,"This is the content from remote1, which will include an image component exposed by remote2. This demonstrates nested federated modules being rendered server-side."),a().createElement("p",null,"Dynamic content: ",e.content||"Default text"),a().createElement(d.ReactAdapterConsumer,{fallback:a().createElement("div",null,"Loading..."),importer:()=>r.e(845).then(r.t.bind(r,845,23)).then((e=>({default:e.Adapted})))})),l=a().forwardRef(((e,t)=>a().createElement(d.ReactAdaperProvider,o({},e,{component:c,ref:t})))),s=c}}]);